version: '3.8'

services:
  traefik:
    image: traefik:v3.5
    command:
      - --api.dashboard=true
      - --entrypoints.web.address=:80
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      # Plugin configuration
      - --experimental.plugins.conditional-meta.moduleName=github.com/carlos/traefik-conditional-meta-plugin
      - --experimental.plugins.conditional-meta.version=v0.1.0
      # Logging
      - --log.level=DEBUG
      - --accesslog=true
    ports:
      - "80:80"
      - "8080:8080"  # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik

  # Example API service
  api:
    image: traefik/whoami
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.routers.api.middlewares=conditional-meta"
      # Plugin middleware configuration
      - "traefik.http.middlewares.conditional-meta.plugin.conditional-meta.queryParam=include"
      - "traefik.http.middlewares.conditional-meta.plugin.conditional-meta.queryValue=meta"
      - "traefik.http.middlewares.conditional-meta.plugin.conditional-meta.metaData.meta.route_name=v2-translate"
    networks:
      - traefik

  # JSON API example
  httpbin:
    image: kennethreitz/httpbin
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.httpbin.rule=Host(`httpbin.localhost`)"
      - "traefik.http.routers.httpbin.middlewares=conditional-meta-json"
      # Custom metadata for JSON endpoints
      - "traefik.http.middlewares.conditional-meta-json.plugin.conditional-meta.metaData.meta.route_name=httpbin-api"
      - "traefik.http.middlewares.conditional-meta-json.plugin.conditional-meta.metaData.meta.service_type=testing"
      - "traefik.http.middlewares.conditional-meta-json.plugin.conditional-meta.metaData.context.environment=development"
    networks:
      - traefik

networks:
  traefik:
    external: true

# Usage:
# 1. Create traefik network: docker network create traefik
# 2. Start services: docker-compose up -d
# 3. Test without metadata: curl "http://api.localhost"
# 4. Test with metadata: curl "http://api.localhost?include=meta"
# 5. Test JSON endpoint: curl "http://httpbin.localhost/json?include=meta"